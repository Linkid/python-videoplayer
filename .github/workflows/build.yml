name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels with cibuildwheel on ${{ matrix.runs-on }} / ${{ matrix.cibw-arch }} (${{ matrix.cibw-manylinux }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        #os: [ubuntu-18.04, windows-latest, macos-latest]
        include:
          #- runs-on: ubuntu-latest
          #  cibw-arch: cp27-manylinux_x86_64
          #  cibw-manylinux: manylinux1

          #- runs-on: ubuntu-latest
          #  cibw-arch: cp27-manylinux_x86_64
          #  cibw-manylinux: manylinux2010

          - runs-on: macos-latest
            cibw-arch: cp27-macosx_x86_64

          - runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==1.6.4

      - name: Install Visual C++ for Python 2.7
        if: runner.os == 'Windows'
        run: |
          choco install vcpython27 -f -y

      #
      # windows
      #
      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'

      - name: Build 64-bit wheel
        if: runner.os == 'Windows'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp27-win_amd64
          CIBW_BEFORE_BUILD: "bash {package}/.github/workflows/before_build.sh ${{ matrix.runs-on }}"
          DISTUTILS_USE_SDK: 1
          MSSdk: 1

      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
        with:
          arch: x86

      - name: Build 32-bit wheel
        if: runner.os == 'Windows'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp27-win32
          CIBW_BEFORE_BUILD: "bash {package}/.github/workflows/before_build.sh ${{ matrix.runs-on }}"
          DISTUTILS_USE_SDK: 1
          MSSdk: 1
      #
      #
      #

      - name: Build wheels
        if: runner.os != 'Windows'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_BUILD: "bash {package}/.github/workflows/before_build.sh ${{ matrix.runs-on }}"
          CIBW_BUILD_VERBOSITY: 0
          CIBW_BUILD: "${{ matrix.cibw-arch }}"
          CIBW_MANYLINUX_X86_64_IMAGE: "${{ matrix.cibw-manylinux }}"
          CIBW_MANYLINUX_I686_IMAGE: "${{ matrix.cibw-manylinux }}"

      #- name: Upload wheels
      #  uses: actions/upload-artifact@v2
      #  with:
      #    path: ./wheelhouse/*.whl
