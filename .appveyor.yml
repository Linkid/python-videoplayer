environment:
    matrix:
        ## linux
        #- APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
        #  APPVEYOR_JOB_NAME: "python37-x64-ubuntu"
        #  compiler: gcc

        ## osx
        #- APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
        #  APPVEYOR_JOB_NAME: "python37-x64-macos-mojave"
        #  compiler: clang

        # windows
        - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
          APPVEYOR_JOB_NAME: "python37-x86-vs2015"
          arch: x86
          platform: x86
          compiler: msvc
          arch_mingw: mingw-w64-i686-

        - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
          APPVEYOR_JOB_NAME: "python37-x64-vs2015"
          arch: amd64
          platform: x64
          compiler: msvc
          arch_mingw: mingw-w64-x86_64-


stack: python 3.7

init:
    - echo %APPVEYOR_BUILD_WORKER_IMAGE%
    #- set "PYTHON_ROOT=C:\python37-x64"
    #- set "PATH=%PYTHON_ROOT%;%PYTHON_ROOT%\Scripts;%PATH%"
    - cmd: set PATH=C:\Python37;C:\Python37\Scripts;%PATH%

install:
    - python -m pip install cython pkgconfig
    #- 'if "%compiler%"=="msvc" vcpkg install protobuf:%platform%-windows'
    #- ls C:\Tools\vcpkg\packages\protobuf_x86-windows\lib\pkgconfig
    #- ls C:\Tools\vcpkg\packages\protobuf_x86-windows\bin
    #- 'if "%compiler%"=="msvc" set PKG_CONFIG_PATH=%PKG_CONFIG_PATH%;C:\Tools\vcpkg\packages\protobuf_%platform%-windows\lib\pkgconfig'
    #- pacman --noconfirm -S base-devel %arch_mingw%-pkg-config
    #- choco install pkgconfiglite
    - 'if "%compiler%"=="msvc" appveyor DownloadFile "https://downloads.sourceforge.net/project/pkgconfiglite/0.28-1/pkg-config-lite-0.28-1_bin-win32.zip?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fpkgconfiglite%2Ffiles%2F0.28-1%2F&ts=1506994037&use_mirror=superb-dca2" -FileName "C:\pkg-config-lite-0.28-1_bin-win32.zip"'
    - 'if "%compiler%"=="msvc" 7z x -y "C:\pkg-config-lite-0.28-1_bin-win32.zip" -o"C:\"'
    - 'if "%compiler%"=="msvc" dir /s/b C:\pkg-config-lite-0.28-1\bin'
    - if "%compiler%"=="msvc"
        vcpkg install glib:%platform%-windows
                      libogg:%platform%-windows
                      libtheora:%platform%-windows
                      ffmpeg:%platform%-windows

build_script:
    - mkdir wheelhouse

    - 'if "%compiler%"=="msvc" python setup.py build_ext --inplace --force'
    - 'if "%compiler%"=="msvc" python setup.py sdist --dist-dir wheelhouse'
    - 'if "%compiler%"=="msvc" python setup.py bdist_wheel --dist-dir wheelhouse'

# after_build


artifacts:
    - path: "wheelhouse\\*.whl"
      name: Wheels
